CV.thresholdHSV = function(imageSrc, imageDst, hThreshold, tolerance, kernelSize){
  var src = imageSrc.data, dst = imageDst.data,
      len = src.length, tab = [], i,
      height = imageSrc.height, width = imageSrc.width;
  
  for (i = 0; i < 359; ++ i){
    tab[i] = ((i <= hThreshold + tolerance &&
               i >= hThreshold - tolerance) ? 255 : 0);
  }

  if (kernelSize % 2 == 0) {
    kernelSize++;
  }
  let halfSize = Math.floor(kernelSize / 2);
  
  for (let i = 0; i < height; i++){
    for (let j = 0; j < width; ++j) {
      let index = 4 * (i * width + j);

      let mean_h = 0;

      let factor = 0;
      for (let x = i - halfSize; x <= i + halfSize; ++x) {
	for (let y = j - halfSize; y <= j + halfSize; ++y) {
	  if (x >= 0 && x < height && y >= 0 && y < width) {
	    factor++;
	    let inner_index = 4 * (x * width + y);
	    let r = src[inner_index++];
	    let g = src[inner_index++];
	    let b = src[inner_index++];

	    mean_h += rgb2hsv(r,g,b).h;
	  }
	}
      }

      console.log(factor);
      let new_val = tab[Math.floor(mean_h/factor)];
      dst[index] = dst[index + 1] = dst[index + 2] = new_val;
      dst[index + 3] = 255;
    }
  }

  imageDst.width = imageSrc.width;
  imageDst.height = imageSrc.height;
  
  return imageDst;
};
